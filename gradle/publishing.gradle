tasks.create 'release'


project.plugins.withId('maven-publish') {

    model {
        def publication = publishing.publications.mavenJava
        tasks.jar {
            into("META-INF/maven/${project.group}/${project.name}") {
                from generatePomFileForMavenJavaPublication
                rename 'pom-default.xml', 'pom.xml'
            }
        }
    }

    tasks.create('sourcesJar', Jar) {
        description = 'Assembles a jar archive containing the sources.'
        classifier = 'sources'
        group = 'build'
        from sourceSets.main.allSource
    }

    tasks.create('javadocJar', Jar) {
        description = 'Assembles a jar archive containing the javadocs.'
        classifier = 'javadoc'
        group = 'build'
        from tasks.javadoc
    }

    project.publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact tasks.sourcesJar
                artifact tasks.javadocJar

                pom.withXml {
                    configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each { dep ->
                        asNode().dependencies.dependency.find {
                            it.artifactId.text() == dep.moduleName && it.groupId.text() == dep.moduleGroup
                        }?.scope[0]?.value = 'compile'
                    }
                }
            }
        }
    }

    plugins.withId('com.jfrog.bintray') {
        bintray.publications = ['mavenJava']
    }
}


project.plugins.withId('com.jfrog.bintray') {
    bintray {
        user = project.bintray_user
        key = project.bintray_key

        dryRun = Boolean.valueOf(project.bintray_dryrun as String)

        pkg {
            repo = project.bintray_repo
            name = project.name
            desc = project.description
            websiteUrl = project.home_url
            licenses = ['MIT']
            labels = project.bintray_labels.split(',')

            vcsUrl = project.scm_url
            issueTrackerUrl = project.issues_url
            publicDownloadNumbers = true
        }

        pkg.version {
            name = project.version
            released = new Date()
            vcsTag = project.version
        }
    }

    tasks['release'].dependsOn tasks.bintrayUpload
}
